package model;
// Generated 08/04/2015 07:36:29 by Hibernate Tools 3.6.0


import dao.AlunoDAO;
import dao.NucleoDAO;
import java.sql.SQLException;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Nucleo generated by hbm2java
 */
@Entity
@Table(name="nucleo"
    ,catalog="scp"
)
public class Nucleo  implements java.io.Serializable {


     private int numeroRegistroNucleo;
     private Departamento departamento;

    public Nucleo(int numeroRegistroNucleo, String nomeNucleo, Departamento departamento) {
        this.numeroRegistroNucleo = numeroRegistroNucleo;
        this.departamento = departamento;
        this.nomeNucleo = nomeNucleo;
    }
     private String nomeNucleo;
     
    public Nucleo() {
    }

	
    
   
     @Id 

    
    @Column(name="numeroRegistroNucleo", unique=true, nullable=false)
    public int getNumeroRegistroNucleo() {
        return this.numeroRegistroNucleo;
    }
    
    public void setNumeroRegistroNucleo(int numeroRegistroNucleo) {
        this.numeroRegistroNucleo = numeroRegistroNucleo;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="numeroRegistroDepartamento", nullable=false)
    public Departamento getDepartamento() {
        return this.departamento;
    }
    
    public void setDepartamento(Departamento departamento) {
        this.departamento = departamento;
    }

    
    @Column(name="nomeNucleo", length=45)
    public String getNomeNucleo() {
        return this.nomeNucleo;
    }
    
    public void setNomeNucleo(String nomeNucleo) {
        this.nomeNucleo = nomeNucleo;
    }
    
    public static List<Nucleo> obterNucleos () throws ClassNotFoundException, SQLException {
            return NucleoDAO.obterNucleos();
    }
    
     

    public static Nucleo obterNucleo (int id) throws ClassNotFoundException, SQLException{
        return NucleoDAO.obterNucleo(id);
        
    }

    public void gravar() throws SQLException, ClassNotFoundException{
        NucleoDAO.gravar(this);
    }
    
    public void alterar() throws SQLException, ClassNotFoundException{
        NucleoDAO.alterar(this);
    }
    public void excluir() throws SQLException, ClassNotFoundException{
        NucleoDAO.excluir(this);
    }





}


