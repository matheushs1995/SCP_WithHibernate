package model;
// Generated 08/04/2015 07:36:29 by Hibernate Tools 3.6.0


import dao.DepartamentoDAO;
import java.sql.SQLException;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Departamento generated by hbm2java
 */
@Entity
@Table(name="departamento"
    ,catalog="scp"
)
public class Departamento  implements java.io.Serializable {


     private int numeroRegistroDepartamento;
     private Campus campus;
     private String nomeDepartamento;
     
    public Departamento() {
    }

	
    public Departamento(int numeroRegistroDepartamento, String nomeDepartamento, Campus campus) {
        this.numeroRegistroDepartamento = numeroRegistroDepartamento;
        this.nomeDepartamento = nomeDepartamento;
        this.campus = campus;
    }
   
     @Id 

    
    @Column(name="numeroRegistroDepartamento", unique=true, nullable=false)
    public int getNumeroRegistroDepartamento() {
        return this.numeroRegistroDepartamento;
    }
    
    public void setNumeroRegistroDepartamento(int numeroRegistroDepartamento) {
        this.numeroRegistroDepartamento = numeroRegistroDepartamento;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="numeroRegistroCampus", nullable=false)
    public Campus getCampus() {
        return this.campus;
    }
    
    public void setCampus(Campus campus) {
        this.campus = campus;
    }

    
    @Column(name="nomeDepartamento", length=45)
    public String getNomeDepartamento() {
        return this.nomeDepartamento;
    }
    
    public void setNomeDepartamento(String nomeDepartamento) {
        this.nomeDepartamento = nomeDepartamento;
    }

    public static List<Departamento> obterDepartamentos () throws ClassNotFoundException, SQLException {
            return DepartamentoDAO.obterDepartamentos();
    }
    
     

    public static Departamento obterDepartamento (int id) throws ClassNotFoundException, SQLException{
        return DepartamentoDAO.obterDepartamento(id);
        
    }

    public void gravar() throws SQLException, ClassNotFoundException{
        DepartamentoDAO.gravar(this);
    }
    
    public void alterar() throws SQLException, ClassNotFoundException{
        DepartamentoDAO.alterar(this);
    }
    public void excluir() throws SQLException, ClassNotFoundException{
        DepartamentoDAO.excluir(this);
    }




}


