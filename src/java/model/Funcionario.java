package model;
// Generated 08/04/2015 07:36:29 by Hibernate Tools 3.6.0


import dao.FuncionarioDAO;
import java.sql.SQLException;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Funcionario generated by hbm2java
 */
@Entity
@Table(name="funcionario"
    ,catalog="scp"
)
public class Funcionario  implements java.io.Serializable {


     private int numeroRegistroFuncionario;
     private Usuario usuario;
     private String cargo;

    public Funcionario() {
    }

	
    public Funcionario(int numeroRegistroFuncionario, String cargo,Usuario usuario) {
        this.numeroRegistroFuncionario = numeroRegistroFuncionario;
        this.cargo = cargo;
        this.usuario=usuario;
    }
   
     @Id 

    
    @Column(name="numeroRegistroFuncionario", unique=true, nullable=false)
    public int getNumeroRegistroFuncionario() {
        return this.numeroRegistroFuncionario;
    }
    
    public void setNumeroRegistroFuncionario(int numeroRegistroFuncionario) {
        this.numeroRegistroFuncionario = numeroRegistroFuncionario;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Usuario_cpf", nullable=false)
    public Usuario getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    
    @Column(name="cargo", length=45)
    public String getCargo() {
        return this.cargo;
    }
    
    public void setCargo(String cargo) {
        this.cargo = cargo;
    }
    
    public static List<Funcionario> obterFuncionarios () throws ClassNotFoundException, SQLException {
            return FuncionarioDAO.obterFuncionarios();
    }
    
     

    public static Funcionario obterFuncionario (int id) throws ClassNotFoundException, SQLException{
        return FuncionarioDAO.obterFuncionario(id);
        
    }

    public void gravar() throws SQLException, ClassNotFoundException{
        FuncionarioDAO.gravar(this);
    }
    
    public void alterar() throws SQLException, ClassNotFoundException{
        FuncionarioDAO.alterar(this);
    }
    public void excluir() throws SQLException, ClassNotFoundException{
        FuncionarioDAO.excluir(this);
    }




}


