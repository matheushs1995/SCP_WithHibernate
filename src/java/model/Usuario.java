package model;
// Generated 08/04/2015 07:36:29 by Hibernate Tools 3.6.0


import dao.UsuarioDAO;
import java.sql.SQLException;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name="usuario"
    ,catalog="scp"
)
public class Usuario  implements java.io.Serializable {


     private int cpf;
     private String login;
     private String senha;
     private String nomeCompleto;
     private String naturalidade;
     private String nacionalidade;
     private String rg;
     private String orgaoExpedidor;
     private String ufrg;
     private String dataNascimento;
     private String email;
     private String tipoUsuario;
     private String estado;
     private String cidade;
     private String bairro;
     private String rua;
     private String numero;
     private String complemento;

     public Usuario(int cpf, String login, String senha, String nomeCompleto, String naturalidade, String nacionalidade, String rg, String orgaoExpedidor, String ufrg, String dataNascimento, String email,
             String estado,String cidade,String bairro,String rua,String numero,String complemento, String tipoUsuario) {
        this.cpf = cpf;
        this.login = login;
        this.senha = senha;
        this.nomeCompleto = nomeCompleto;
        this.naturalidade = naturalidade;
        this.nacionalidade = nacionalidade;
        this.rg = rg;
        this.orgaoExpedidor = orgaoExpedidor;
        this.ufrg = ufrg;
        this.dataNascimento = dataNascimento;
        this.email = email;
        this.tipoUsuario = tipoUsuario;
        this.estado=estado;
        this.cidade=cidade;
        this.bairro=bairro;
        this.rua=rua;
        this.numero=numero;
        this.complemento=complemento;
        
    }
     

    public Usuario() {
    }

	
    
   
     @Id 

    
    @Column(name="cpf", unique=true, nullable=false)
    public int getCpf() {
        return this.cpf;
    }
    
    public void setCpf(int cpf) {
        this.cpf = cpf;
    }

    
    @Column(name="login", length=45)
    public String getLogin() {
        return this.login;
    }
    
    public void setLogin(String login) {
        this.login = login;
    }

    
    @Column(name="senha", length=45)
    public String getSenha() {
        return this.senha;
    }
    
    public void setSenha(String senha) {
        this.senha = senha;
    }

    
    @Column(name="nomeCompleto", length=45)
    public String getNomeCompleto() {
        return this.nomeCompleto;
    }
    
    public void setNomeCompleto(String nomeCompleto) {
        this.nomeCompleto = nomeCompleto;
    }

    
    @Column(name="naturalidade", length=45)
    public String getNaturalidade() {
        return this.naturalidade;
    }
    
    public void setNaturalidade(String naturalidade) {
        this.naturalidade = naturalidade;
    }

    
    @Column(name="nacionalidade", length=45)
    public String getNacionalidade() {
        return this.nacionalidade;
    }
    
    public void setNacionalidade(String nacionalidade) {
        this.nacionalidade = nacionalidade;
    }

    
    @Column(name="rg", length=45)
    public String getRg() {
        return this.rg;
    }
    
    public void setRg(String rg) {
        this.rg = rg;
    }

    
    @Column(name="orgaoExpedidor", length=45)
    public String getOrgaoExpedidor() {
        return this.orgaoExpedidor;
    }
    
    public void setOrgaoExpedidor(String orgaoExpedidor) {
        this.orgaoExpedidor = orgaoExpedidor;
    }

    
    @Column(name="ufrg", length=45)
    public String getUfrg() {
        return this.ufrg;
    }
    
    public void setUfrg(String ufrg) {
        this.ufrg = ufrg;
    }

    
    @Column(name="dataNascimento", length=45)
    public String getDataNascimento() {
        return this.dataNascimento;
    }
    
    public void setDataNascimento(String dataNascimento) {
        this.dataNascimento = dataNascimento;
    }

    
    @Column(name="email", length=45)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="tipoUsuario", length=45)
    public String getTipoUsuario() {
        return this.tipoUsuario;
    }
    
    public void setTipoUsuario(String tipoUsuario) {
        this.tipoUsuario = tipoUsuario;
    }

    
    @Column(name="estado", nullable=false, length=80)
    public String getEstado() {
        return this.estado;
    }
    
    public void setEstado(String estado) {
        this.estado = estado;
    }
    
    @Column(name="cidade", nullable=false, length=20)
    public String getCidade() {
        return this.cidade;
    }
    
    public void setCidade(String cidade) {
        this.cidade = cidade;
    }
    
    
    @Column(name="bairro", nullable=false, length=20)
    public String getbairro() {
        return this.bairro;
    }
    
    public void setBairro(String bairro) {
        this.bairro = bairro;
    }
    
    @Column(name="rua", nullable=false, length=20)
    public String getRua() {
        return this.rua;
    }
    
    public void setRua(String rua) {
        this.rua = rua;
    }
    
    @Column(name="numero", nullable=false, length=10)
    public String getNumero() {
        return this.numero;
    }
    
    public void setNumero(String numero) {
        this.numero = numero;
    }
    
    @Column(name="complemento", nullable=false, length=80)
    public String getComplemento() {
        return this.complemento;
    }
    
    public void setComplemento(String complemento) {
        this.complemento = complemento;
    }

    public static List<Usuario> obterUsuarios () throws ClassNotFoundException, SQLException {
            return UsuarioDAO.obterUsuarios();
    }
    
     

    public static Usuario obterUsuario (int id) throws ClassNotFoundException, SQLException{
        return UsuarioDAO.obterUsuario(id);
        
    }
    public static Usuario obterUsuarioLogin (String login) throws ClassNotFoundException, SQLException{
        return UsuarioDAO.obterUsuarioLogin(login);
        
    }

    public void gravar() throws SQLException, ClassNotFoundException{
        UsuarioDAO.gravar(this);
    }
    
    public void alterar() throws SQLException, ClassNotFoundException{
        UsuarioDAO.alterar(this);
    }
    public void excluir() throws SQLException, ClassNotFoundException{
        UsuarioDAO.excluir(this);
    }





}


