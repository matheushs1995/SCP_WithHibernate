package model;
// Generated 08/04/2015 07:36:29 by Hibernate Tools 3.6.0


import dao.PlanoIndividualDAO;
import java.sql.SQLException;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Planoindividual generated by hbm2java
 */
@Entity
@Table(name="planoindividual"
    ,catalog="scp"
)
public class Planoindividual  implements java.io.Serializable {


     private int numeroRegistroPlanoIndividual;
     private Projeto projeto;
     private Aluno aluno;
     private String localRealizacaoProjeto;
     private String envolvimento;
     private String resultadoEsperado;
     private String cronogramaAtividade;

    public Planoindividual() {
    }

	
    public Planoindividual(int numeroRegistroPlanoIndividual, String localRealizacaoProjeto, String envolvimento, String resultadoEsperado, String cronogramaAtividade, Aluno aluno, Projeto projeto) {
        this.numeroRegistroPlanoIndividual = numeroRegistroPlanoIndividual;
        this.localRealizacaoProjeto = localRealizacaoProjeto;
        this.envolvimento = envolvimento;
        this.resultadoEsperado = resultadoEsperado;
        this.cronogramaAtividade = cronogramaAtividade;
        this.aluno = aluno;
        this.projeto = projeto;
    }
   
     @Id 

    
    @Column(name="numeroRegistroPlanoIndividual", unique=true, nullable=false)
    public int getNumeroRegistroPlanoIndividual() {
        return this.numeroRegistroPlanoIndividual;
    }
    
    public void setNumeroRegistroPlanoIndividual(int numeroRegistroPlanoIndividual) {
        this.numeroRegistroPlanoIndividual = numeroRegistroPlanoIndividual;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="numeroRegistroProjeto", nullable=false)
    public Projeto getProjeto() {
        return this.projeto;
    }
    
    public void setProjeto(Projeto projeto) {
        this.projeto = projeto;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="numeroRegistroAluno", nullable=false)
    public Aluno getAluno() {
        return this.aluno;
    }
    
    public void setAluno(Aluno aluno) {
        this.aluno = aluno;
    }

    
    @Column(name="localRealizacaoProjeto", length=60)
    public String getLocalRealizacaoProjeto() {
        return this.localRealizacaoProjeto;
    }
    
    public void setLocalRealizacaoProjeto(String localRealizacaoProjeto) {
        this.localRealizacaoProjeto = localRealizacaoProjeto;
    }

    
    @Column(name="envolvimento", length=45)
    public String getEnvolvimento() {
        return this.envolvimento;
    }
    
    public void setEnvolvimento(String envolvimento) {
        this.envolvimento = envolvimento;
    }

    
    @Column(name="resultadoEsperado", length=45)
    public String getResultadoEsperado() {
        return this.resultadoEsperado;
    }
    
    public void setResultadoEsperado(String resultadoEsperado) {
        this.resultadoEsperado = resultadoEsperado;
    }

    
    @Column(name="cronogramaAtividade", length=45)
    public String getCronogramaAtividade() {
        return this.cronogramaAtividade;
    }
    
    public void setCronogramaAtividade(String cronogramaAtividade) {
        this.cronogramaAtividade = cronogramaAtividade;
    }

    public static List<Planoindividual> obterPlanosIndividuais () throws ClassNotFoundException, SQLException {
            return PlanoIndividualDAO.obterPlanosIndividuais();
    }
    
     

    public static Planoindividual obterPlanoIndividual (int id) throws ClassNotFoundException, SQLException{
        return PlanoIndividualDAO.obterPlanoIndividual(id);
        
    }

    public void gravar() throws SQLException, ClassNotFoundException{
        PlanoIndividualDAO.gravar(this);
    }
    
    public void alterar() throws SQLException, ClassNotFoundException{
        PlanoIndividualDAO.alterar(this);
    }
    public void excluir() throws SQLException, ClassNotFoundException{
        PlanoIndividualDAO.excluir(this);
    }



}


